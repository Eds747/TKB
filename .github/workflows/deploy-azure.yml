name: Deploy YHWH Knowledge Base to Azure

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: yhwh-knowledge-base
  PYTHON_VERSION: '3.11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üî• Checkout repository
      uses: actions/checkout@v4

    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: üîß Prepare deployment package
      run: |
        # Remove README.md to prevent Azure from serving it
        rm -f README.md readme.md Readme.md
        
        # Create a simple main.py that Azure can execute directly
        cat > main.py << 'EOF'
        import sys
        import os
        from pathlib import Path

        # Add current directory to Python path
        sys.path.insert(0, os.getcwd())

        # Import and run the FastAPI app
        from backend.app import app

        if __name__ == "__main__":
            import uvicorn
            port = int(os.environ.get("PORT", 8000))
            print(f"Starting YHWH Knowledge Base on port {port}")
            uvicorn.run(app, host="0.0.0.0", port=port)
        EOF

        # Create web.config for Azure App Service with simpler configuration
        cat > web.config << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <handlers>
              <add name="PythonHandler" path="*" verb="*" modules="httpPlatformHandler" resourceType="Unspecified"/>
            </handlers>
            <httpPlatform processPath="D:\home\python\python.exe" 
                          arguments="main.py" 
                          stdoutLogEnabled="true" 
                          stdoutLogFile="D:\home\LogFiles\stdout.log">
              <environmentVariables>
                <environmentVariable name="PORT" value="%HTTP_PLATFORM_PORT%" />
              </environmentVariables>
            </httpPlatform>
          </system.webServer>
        </configuration>
        EOF

        # Verify deployment files
        echo "üìÅ Deployment files ready:"
        ls -la backend/ frontend/ backend/data/ || echo "Directories checked"

    - name: üöÄ Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
        package: .
        startup-command: 'python main.py'
